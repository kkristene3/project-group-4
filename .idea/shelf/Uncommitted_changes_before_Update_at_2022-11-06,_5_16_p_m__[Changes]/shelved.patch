Index: app/src/main/java/com/example/mealer_project/ui/screens/ComplaintScreen.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.mealer_project.ui.screens;\n\nimport android.app.DatePickerDialog;\nimport android.graphics.Color;\nimport android.graphics.drawable.ColorDrawable;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.DatePicker;\nimport android.widget.TextView;\n\nimport com.example.mealer_project.R;\nimport com.example.mealer_project.app.App;\nimport com.example.mealer_project.data.models.inbox.Complaint;\nimport com.example.mealer_project.ui.core.StatefulView;\nimport com.example.mealer_project.ui.core.UIScreen;\n\nimport java.util.Calendar;\n\npublic class ComplaintScreen extends UIScreen implements StatefulView{\n    private Button banButton;\n    private DatePickerDialog datePickerDialog;\n    DatePickerDialog.OnDateSetListener dateSetListener;\n    Complaint complaintData;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_complaint_screen);\n        banButton = findViewById(R.id.ban_chef);\n\n        try {\n\n            complaintData = (Complaint) getIntent().getSerializableExtra(AdminScreen.COMPLAINT_OBJ_INTENT_KEY);\n\n            updateComplaintScreen(complaintData.getTitle(), complaintData.getClientId(), complaintData.getChefId(), complaintData.getOrderId(), complaintData.getDescription());\n\n        }catch (Exception e) {\n            Log.e(\"ComplaintScreen\", \"unable to create complaint object\");\n            displayErrorToast(\"Unable to display complaint!\");\n        }\n\n\n    }\n\n    @Override\n    public void updateUI() {\n    }\n\n\n    /**\n     * Updates the text on the complaint screen\n     * @param title\n     * @param client\n     * @param chef\n     * @param meal\n     * @param description\n     */\n    public void updateComplaintScreen(String title, String client, String chef, String meal, String description) {\n        // sets the complaint header title\n        TextView textTitle = (TextView)findViewById(R.id.complaintHeader);\n        textTitle.setText(title);\n\n        // sets the text for client name\n        TextView textClient = (TextView)findViewById(R.id.clientComplaintName);\n        textClient.setText(client);\n\n        // sets the text for chef name\n        TextView textChef = (TextView)findViewById(R.id.chefComplaintName);\n        textChef.setText(chef);\n\n        // sets the text for meal\n        TextView textMeal = (TextView)findViewById(R.id.mealComplaintName);\n        textMeal.setText(meal);\n\n        // sets the text for description\n        TextView textDescription = (TextView)findViewById(R.id.complaintDescription);\n        textDescription.setText(description);\n    }\n\n    @Override\n    public void showNextScreen() {\n\n    }\n\n    public void openDatePicker(View view){\n        Calendar cal = Calendar.getInstance();\n        int year = cal.get(Calendar.YEAR);\n        int month = cal.get(Calendar.MONTH);\n        int day = cal.get(Calendar.DAY_OF_MONTH);\n\n        datePickerDialog = new DatePickerDialog(ComplaintScreen.this, android.R.style.Theme_Holo_Light_Dialog_MinWidth, dateSetListener, year, month, day);\n        datePickerDialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\n        datePickerDialog.show();\n    }\n\n    public void dateSetListener (DatePicker view,\n                                    int year,\n                                    int month,\n                                    int dayOfMonth) {\n\n\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mealer_project/ui/screens/ComplaintScreen.java b/app/src/main/java/com/example/mealer_project/ui/screens/ComplaintScreen.java
--- a/app/src/main/java/com/example/mealer_project/ui/screens/ComplaintScreen.java	(revision 23936427a8e7a03ce5900ba95a057441297c0021)
+++ b/app/src/main/java/com/example/mealer_project/ui/screens/ComplaintScreen.java	(date 1667772674698)
@@ -12,9 +12,12 @@
 
 import com.example.mealer_project.R;
 import com.example.mealer_project.app.App;
+import com.example.mealer_project.data.handlers.UserHandler;
 import com.example.mealer_project.data.models.inbox.Complaint;
 import com.example.mealer_project.ui.core.StatefulView;
 import com.example.mealer_project.ui.core.UIScreen;
+import com.example.mealer_project.utils.Preconditions;
+import com.example.mealer_project.utils.Response;
 
 import java.util.Calendar;
 
@@ -23,6 +26,7 @@
     private DatePickerDialog datePickerDialog;
     DatePickerDialog.OnDateSetListener dateSetListener;
     Complaint complaintData;
+    String[] clientAndChefNames;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -30,22 +34,25 @@
         setContentView(R.layout.activity_complaint_screen);
         banButton = findViewById(R.id.ban_chef);
 
-        try {
-
-            complaintData = (Complaint) getIntent().getSerializableExtra(AdminScreen.COMPLAINT_OBJ_INTENT_KEY);
+        // get the complaint data
+        complaintData = (Complaint) getIntent().getSerializableExtra(AdminScreen.COMPLAINT_OBJ_INTENT_KEY);
 
-            updateComplaintScreen(complaintData.getTitle(), complaintData.getClientId(), complaintData.getChefId(), complaintData.getOrderId(), complaintData.getDescription());
+        // initialize array to hold client and chef names
+        clientAndChefNames = new String[2];
+
+        // get client and chef user names
+        getClientAndChefNames();
+    }
 
+    @Override
+    public void updateUI() {
+
+        try {
+            updateComplaintScreen(complaintData.getTitle(), clientAndChefNames[0], clientAndChefNames[1], complaintData.getOrderId(), complaintData.getDescription());
         }catch (Exception e) {
             Log.e("ComplaintScreen", "unable to create complaint object");
             displayErrorToast("Unable to display complaint!");
         }
-
-
-    }
-
-    @Override
-    public void updateUI() {
     }
 
 
@@ -58,6 +65,7 @@
      * @param description
      */
     public void updateComplaintScreen(String title, String client, String chef, String meal, String description) {
+
         // sets the complaint header title
         TextView textTitle = (TextView)findViewById(R.id.complaintHeader);
         textTitle.setText(title);
@@ -71,8 +79,8 @@
         textChef.setText(chef);
 
         // sets the text for meal
-        TextView textMeal = (TextView)findViewById(R.id.mealComplaintName);
-        textMeal.setText(meal);
+        // TextView textMeal = (TextView)findViewById(R.id.mealComplaintName);
+        // textMeal.setText(meal);
 
         // sets the text for description
         TextView textDescription = (TextView)findViewById(R.id.complaintDescription);
@@ -84,6 +92,42 @@
 
     }
 
+    private void getClientAndChefNames() {
+
+        // we need complaint data to retrieve chef and client names by ids
+        if (complaintData == null) {
+            Log.e("getClientAndChefNames", "complaintData is null");
+            displayErrorToast("not a valid complaint data");
+        }
+
+        // send the request to get id
+        App.getUserHandler().getClientAndChefNamesByIds(complaintData.getClientId(), complaintData.getChefId(), this);
+    }
+
+    public void handleNamesRetrievalSuccess(String name) {
+        if (clientAndChefNames == null) {
+            Log.e("handleNames", "clientAndChefNames is null");
+            displayErrorToast("Unable to process request");
+        }
+
+        // if names array is empty, set client name
+        if (!Preconditions.isNotEmptyString(clientAndChefNames[0])) {
+            clientAndChefNames[0] = name;
+        } else {
+            // set chef's name
+            clientAndChefNames[1] = name;
+        }
+
+        // if we have now received both client and chef names
+        if (Preconditions.isNotEmptyString(clientAndChefNames[0]) && Preconditions.isNotEmptyString(clientAndChefNames[1])) {
+            updateUI();
+        }
+    }
+
+    public void handleNamesRetrievalFailure(String error) {
+        displayErrorToast(error);
+    }
+
     public void openDatePicker(View view){
         Calendar cal = Calendar.getInstance();
         int year = cal.get(Calendar.YEAR);
Index: app/src/main/res/layout/activity_complaint_screen.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:id=\"@+id/container\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n\n    <TextView\n        android:id=\"@+id/complaintHeader\"\n        android:layout_width=\"378dp\"\n        android:layout_height=\"69dp\"\n        android:gravity=\"center\"\n        android:text=\"@string/complaint_header\"\n        android:textSize=\"34sp\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.515\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.146\" />\n\n    <TextView\n        android:id=\"@+id/clientName\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"@string/client_name\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.158\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.386\" />\n\n    <TextView\n        android:id=\"@+id/chefName\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"@string/chefs_name\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.158\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.445\" />\n\n    <TextView\n        android:id=\"@+id/mealName\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"@string/meal_name\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.158\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\" />\n\n    <TextView\n        android:id=\"@+id/descriptionTitle\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"@string/description_title\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.178\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.553\" />\n\n    <Button\n        android:id=\"@+id/dismiss\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"@string/dismiss\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.189\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.939\" />\n\n    <Button\n        android:id=\"@+id/ban_chef\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:onClick=\"openDatePicker\"\n        android:text=\"@string/ban_chef\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.807\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.939\" />\n\n    <TextView\n        android:id=\"@+id/complaintDescription\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"@string/complaint_information\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.498\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.629\" />\n\n    <TextView\n        android:id=\"@+id/clientComplaintName\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"TextView\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.439\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.386\" />\n\n    <TextView\n        android:id=\"@+id/chefComplaintName\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"TextView\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.439\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.445\" />\n\n    <TextView\n        android:id=\"@+id/mealComplaintName\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"TextView\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.439\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\" />\n\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_complaint_screen.xml b/app/src/main/res/layout/activity_complaint_screen.xml
--- a/app/src/main/res/layout/activity_complaint_screen.xml	(revision 23936427a8e7a03ce5900ba95a057441297c0021)
+++ b/app/src/main/res/layout/activity_complaint_screen.xml	(date 1667772816069)
@@ -49,6 +49,7 @@
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:text="@string/meal_name"
+        android:visibility="gone"
         app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintHorizontal_bias="0.158"
@@ -108,7 +109,7 @@
         android:id="@+id/clientComplaintName"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:text="TextView"
+        android:text="unable to get name"
         app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintHorizontal_bias="0.439"
@@ -120,7 +121,7 @@
         android:id="@+id/chefComplaintName"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:text="TextView"
+        android:text="unable to get name"
         app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintHorizontal_bias="0.439"
@@ -132,7 +133,7 @@
         android:id="@+id/mealComplaintName"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:text="TextView"
+        android:visibility="gone"
         app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintHorizontal_bias="0.439"
Index: app/src/main/java/com/example/mealer_project/data/sources/actions/UserActions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.mealer_project.data.sources.actions;\n\nimport static android.content.ContentValues.TAG;\n\nimport android.util.Log;\n\nimport androidx.annotation.NonNull;\n\nimport com.example.mealer_project.app.App;\nimport com.example.mealer_project.data.entity_models.AddressEntityModel;\nimport com.example.mealer_project.data.entity_models.CreditCardEntityModel;\nimport com.example.mealer_project.data.entity_models.UserEntityModel;\nimport com.example.mealer_project.data.models.Address;\nimport com.example.mealer_project.data.models.Admin;\nimport com.example.mealer_project.data.models.Chef;\nimport com.example.mealer_project.data.models.Client;\nimport com.example.mealer_project.data.models.CreditCard;\nimport com.example.mealer_project.data.models.UserRoles;\nimport com.example.mealer_project.ui.screens.LoginScreen;\nimport com.example.mealer_project.utils.Response;\nimport com.google.android.gms.tasks.OnCompleteListener;\nimport com.google.android.gms.tasks.OnFailureListener;\nimport com.google.android.gms.tasks.OnSuccessListener;\nimport com.google.android.gms.tasks.Task;\nimport com.google.firebase.firestore.DocumentReference;\nimport com.google.firebase.firestore.DocumentSnapshot;\nimport com.google.firebase.firestore.FirebaseFirestore;\n\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\n\npublic class UserActions {\n\n    FirebaseFirestore database;\n\n    public UserActions(FirebaseFirestore database) {\n        this.database = database;\n    }\n\n    protected void getUserById(String userId, LoginScreen loginScreen) {\n        // first check if Admin\n        // then check if Client\n        // then check if Chef\n        DocumentReference userReference = database.collection(\"Admin\").document(userId);\n\n        userReference.get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\n            @Override\n            public void onComplete(@NonNull Task<DocumentSnapshot> task) {\n                if (task.isSuccessful()) {\n                    DocumentSnapshot document = task.getResult();\n                    if (document.exists()) {\n                        if (document.getData() != null){\n                            Response r = makeAdminFromFirebase(document, userId);\n                            if (loginScreen != null && r.isSuccess()) {\n                                loginScreen.showNextScreen();\n                            } else if (loginScreen != null){\n                                Log.e(\"Login failed for admin\", r.getErrorMessage());\n                                loginScreen.userLoginFailed(\"Login failed for admin: \" + r.getErrorMessage());\n                            }\n\n                            if (r.isError()) {\n                                Log.e(\"getUserById: \", r.getErrorMessage());\n                            }\n                        }\n\n                    } else {\n                        // if user not in Admin collection, check Chef\n                        getChefById(userId, loginScreen);\n                    }\n                } else {\n                    Log.d(TAG, \"get failed with \", task.getException());\n                }\n            }\n        });\n    }\n\n    protected void getChefById(String userId, LoginScreen loginScreen) {\n        DocumentReference userReference = database.collection(\"Chefs\").document(userId);\n\n        userReference.get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\n            @Override\n            public void onComplete(@NonNull Task<DocumentSnapshot> task) {\n                if (task.isSuccessful()) {\n                    DocumentSnapshot document = task.getResult();\n                    if (document.exists()) {\n                        Log.d(TAG, \"DocumentSnapshot data: \" + document.getData());\n\n                        if (document.getData() != null){\n                            Response r = makeChefFromFirebase(document);\n\n                            if (loginScreen != null && r.isSuccess()) {\n                                loginScreen.showNextScreen();\n                            } else if (loginScreen != null){\n                                Log.e(\"Login failed for chef\", r.getErrorMessage());\n                                loginScreen.userLoginFailed(\"Login failed for user: \" + r.getErrorMessage());\n                            }\n                        }\n\n                    } else {\n                        getClientById(userId, loginScreen);\n                    }\n                } else {\n                    Log.d(TAG, \"get failed with \", task.getException());\n                }\n            }\n        });\n    }\n\n    protected void getClientById(String userId, LoginScreen loginScreen) {\n        DocumentReference userReference = database.collection(\"Clients\").document(userId);\n\n        userReference.get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\n            @Override\n            public void onComplete(@NonNull Task<DocumentSnapshot> task) {\n                if (task.isSuccessful()) {\n                    DocumentSnapshot document = task.getResult();\n                    if (document.exists()) {\n                        Log.d(TAG, \"DocumentSnapshot data: \" + document.getData());\n\n                        if (document.getData() != null){\n                            Response r = makeClientFromFirebase(document);\n                            if (loginScreen != null && r.isSuccess()) {\n                                loginScreen.showNextScreen();\n                            } else if (loginScreen != null){\n                                Log.e(\"Login failed for client\", r.getErrorMessage());\n                                loginScreen.userLoginFailed(\"Login failed for user: \" + r.getErrorMessage());\n                            }\n\n                            if (r.isError()) {\n                                Log.e(\"getUserById: \", r.getErrorMessage());\n                            }\n                        }\n\n                    } else {\n                        Log.d(TAG, \"No such document\");\n                    }\n                } else {\n                    Log.d(TAG, \"get failed with \", task.getException());\n                }\n            }\n        });\n    }\n\n    private Response makeAdminFromFirebase(DocumentSnapshot document, String uid){\n\n        try{\n            if (document.getData() == null) {\n                throw new NullPointerException(\"makeAdminFromFirebase: invalid document object\");\n            }\n\n            String firstName = String.valueOf(document.getData().get(\"firstName\"));\n            String lastName = String.valueOf(document.getData().get(\"lastName\"));\n            String email = String.valueOf(document.getData().get(\"email\"));\n\n            App.getAppInstance().setUser(new Admin(uid, firstName, lastName, email));\n\n            return new Response(true);\n        } catch (Exception e) {\n            return new Response(false, \"makeAdminFromFirebase: \" + e.getMessage());\n        }\n    }\n\n    private Response makeClientFromFirebase(DocumentSnapshot document){\n\n        try{\n\n            if (document.getData() == null) {\n                throw new NullPointerException(\"makeClientFromFirebase: invalid document object\");\n            }\n\n            UserEntityModel newUser = new UserEntityModel();\n            AddressEntityModel newAddress = new AddressEntityModel();\n            CreditCardEntityModel newCreditCard = new CreditCardEntityModel();\n\n            newUser.setFirstName(String.valueOf(document.getData().get(\"firstName\")));\n            newUser.setLastName(String.valueOf(document.getData().get(\"lastName\")));\n            newUser.setEmail(String.valueOf(document.getData().get(\"email\")));\n            newUser.setUserId(document.getId());\n            newUser.setRole(UserRoles.CLIENT);\n\n            newAddress.setStreetAddress(String.valueOf(document.getData().get(\"addressStreet\")));\n            newAddress.setCity(String.valueOf(document.getData().get(\"addressCity\")));\n            newAddress.setCountry(String.valueOf(document.getData().get(\"country\")));\n            newAddress.setPostalCode(String.valueOf(document.getData().get(\"postalCode\")));\n\n            newCreditCard.setBrand(String.valueOf(document.getData().get(\"creditCardBrand\")));\n            newCreditCard.setName(String.valueOf(document.getData().get(\"creditCardName\")));\n            newCreditCard.setNumber(String.valueOf(document.getData().get(\"creditCardNumber\")));\n            newCreditCard.setExpiryMonth(Integer.parseInt(document.getData().get(\"creditCardExpiryMonth\").toString()));\n            newCreditCard.setExpiryYear(Integer.parseInt(document.getData().get(\"creditCardExpiryYear\").toString()));\n            newCreditCard.setCvc(String.valueOf(document.getData().get(\"creditCardCvc\")));\n\n            Address address = new Address(newAddress);\n            CreditCard creditCard = new CreditCard(newCreditCard);\n\n            Client newClient = new Client(newUser, address, creditCard);\n\n            App.getAppInstance().setUser(newClient);\n\n            return new Response(true);\n        } catch (Exception e) {\n            return new Response(false, \"makeChefFromFirebase: \" + e.getMessage());\n        }\n    }\n\n    private Response makeChefFromFirebase(DocumentSnapshot document){\n\n        try {\n\n            if (document.getData() == null) {\n                throw new NullPointerException(\"makeChefFromFirebase: invalid document object\");\n            }\n\n            UserEntityModel newUser = new UserEntityModel();\n            AddressEntityModel newAddress = new AddressEntityModel();\n\n            newUser.setFirstName(String.valueOf(document.getData().get(\"firstName\")));\n            newUser.setLastName(String.valueOf(document.getData().get(\"lastName\")));\n            newUser.setEmail(String.valueOf(document.getData().get(\"email\")));\n            newUser.setUserId(document.getId());\n            newUser.setRole(UserRoles.CHEF);\n\n            newAddress.setStreetAddress(String.valueOf(document.getData().get(\"addressStreet\")));\n            newAddress.setCity(String.valueOf(document.getData().get(\"addressCity\")));\n            newAddress.setCountry(String.valueOf(document.getData().get(\"country\")));\n            newAddress.setPostalCode(String.valueOf(document.getData().get(\"postalCode\")));\n\n            String description = String.valueOf(document.getData().get(\"description\"));\n            String voidCheque = String.valueOf(document.getData().get(\"voidCheque\"));\n\n            Address address = new Address(newAddress);\n\n            Chef newChef = new Chef(newUser, address, description, voidCheque);\n\n            newChef.setIsSuspended((Boolean)document.getData().get(\"isSuspended\"));\n\n            if (String.valueOf(document.getData().get(\"suspensionDate\")) != \"\"){\n                Date suspensionDate = new SimpleDateFormat(\"dd/MM/yyyy\").parse(String.valueOf(document.getData().get(\"suspensionDate\")));\n                newChef.setSuspensionDate(suspensionDate);\n            }\n            App.getAppInstance().setUser(newChef);\n\n            return new Response(true);\n        } catch (Exception e) {\n            return new Response(false, \"makeChefFromFirebase: \" + e.getMessage());\n        }\n    }\n\n    /**\n     * Method changes fields (isSuspended and suspensionDate) of chef in firebase based on admin response\n     * to complaint\n     * @param chefId id of the chef associated with the complaint\n     * @param isSuspended boolean whether chef is suspended\n     * @param suspensionDate end date of suspension\n     */\n\n    public void updateChefSuspension(String chefId, boolean isSuspended, Date suspensionDate){\n\n        // Set the \"isSuspended\" field to ban boolean and the \"suspensionDate\" field to suspensionDate date\n        database.collection(\"Chefs\").document(chefId)\n                .update(\n                        \"isSuspended\", isSuspended,\n                        \"suspensionDate\",suspensionDate)\n                .addOnSuccessListener(new OnSuccessListener<Void>() {\n                    @Override\n                    public void onSuccess(Void aVoid) {\n                        Log.d(\"Success\", \"DocumentSnapshot successfully updated!\");\n                    }\n                })\n                .addOnFailureListener(new OnFailureListener() {\n                    @Override\n                    public void onFailure(@NonNull Exception e) {\n                        Log.w(\"Error\", \"Error updating document\", e);\n                    }\n                });\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mealer_project/data/sources/actions/UserActions.java b/app/src/main/java/com/example/mealer_project/data/sources/actions/UserActions.java
--- a/app/src/main/java/com/example/mealer_project/data/sources/actions/UserActions.java	(revision 23936427a8e7a03ce5900ba95a057441297c0021)
+++ b/app/src/main/java/com/example/mealer_project/data/sources/actions/UserActions.java	(date 1667771020958)
@@ -16,6 +16,7 @@
 import com.example.mealer_project.data.models.Client;
 import com.example.mealer_project.data.models.CreditCard;
 import com.example.mealer_project.data.models.UserRoles;
+import com.example.mealer_project.ui.screens.ComplaintScreen;
 import com.example.mealer_project.ui.screens.LoginScreen;
 import com.example.mealer_project.utils.Response;
 import com.google.android.gms.tasks.OnCompleteListener;
@@ -32,6 +33,11 @@
 public class UserActions {
 
     FirebaseFirestore database;
+    private final static String CLIENT_COLLECTION = "Clients";
+    private final static String CHEF_COLLECTION = "Chefs";
+    private final static String ADMIN_COLLECTION = "Admin";
+
+
 
     public UserActions(FirebaseFirestore database) {
         this.database = database;
@@ -41,7 +47,7 @@
         // first check if Admin
         // then check if Client
         // then check if Chef
-        DocumentReference userReference = database.collection("Admin").document(userId);
+        DocumentReference userReference = database.collection(ADMIN_COLLECTION).document(userId);
 
         userReference.get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {
             @Override
@@ -75,7 +81,7 @@
     }
 
     protected void getChefById(String userId, LoginScreen loginScreen) {
-        DocumentReference userReference = database.collection("Chefs").document(userId);
+        DocumentReference userReference = database.collection(CHEF_COLLECTION).document(userId);
 
         userReference.get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {
             @Override
@@ -107,7 +113,7 @@
     }
 
     protected void getClientById(String userId, LoginScreen loginScreen) {
-        DocumentReference userReference = database.collection("Clients").document(userId);
+        DocumentReference userReference = database.collection(CLIENT_COLLECTION).document(userId);
 
         userReference.get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {
             @Override
@@ -257,7 +263,7 @@
     public void updateChefSuspension(String chefId, boolean isSuspended, Date suspensionDate){
 
         // Set the "isSuspended" field to ban boolean and the "suspensionDate" field to suspensionDate date
-        database.collection("Chefs").document(chefId)
+        database.collection(CHEF_COLLECTION).document(chefId)
                 .update(
                         "isSuspended", isSuspended,
                         "suspensionDate",suspensionDate)
@@ -274,4 +280,70 @@
                     }
                 });
     }
+
+    public void getClientAndChefNamesByIds(String clientId, String chefId, ComplaintScreen complaintScreen) {
+        // first get client name
+        database
+                .collection(CLIENT_COLLECTION)
+                .document(clientId)
+                .get()
+                .addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {
+                    @Override
+                    public void onComplete(@NonNull Task<DocumentSnapshot> task) {
+                        if (task.isSuccessful()) {
+                            DocumentSnapshot document = task.getResult();
+                            if (document.exists()) {
+                                if (document.getData() != null){
+                                    complaintScreen
+                                            .handleNamesRetrievalSuccess(
+                                                    document.getData().get("firstName")
+                                                    + " " +
+                                                    document.getData().get("lastName")
+                                            );
+                                } else {
+                                    Log.e("getClientChefName", "document data null");
+                                    complaintScreen.handleNamesRetrievalFailure("unable to process request");
+                                }
+                            } else {
+                                Log.e("getClientChefName", "client not found for id: " + clientId);
+                                complaintScreen.handleNamesRetrievalFailure("unable to process request");
+                            }
+                        } else {
+                            Log.e(TAG, "getClientChefName failed with ", task.getException());
+                        }
+                    }
+                });
+
+        // first get client name
+        database
+                .collection(CHEF_COLLECTION)
+                .document(chefId)
+                .get()
+                .addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {
+                    @Override
+                    public void onComplete(@NonNull Task<DocumentSnapshot> task) {
+                        if (task.isSuccessful()) {
+                            DocumentSnapshot document = task.getResult();
+                            if (document.exists()) {
+                                if (document.getData() != null){
+                                    complaintScreen
+                                            .handleNamesRetrievalSuccess(
+                                                    document.getData().get("firstName")
+                                                            + " " +
+                                                            document.getData().get("lastName")
+                                            );
+                                } else {
+                                    Log.e("getClientChefName", "document data null");
+                                    complaintScreen.handleNamesRetrievalFailure("unable to process request");
+                                }
+                            } else {
+                                Log.e("getClientChefName", "chef not found for provided id: " + chefId);
+                                complaintScreen.handleNamesRetrievalFailure("unable to process request");
+                            }
+                        } else {
+                            Log.e(TAG, "getClientChefName failed with ", task.getException());
+                        }
+                    }
+                });
+    }
 }
Index: app/src/main/java/com/example/mealer_project/data/handlers/UserHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.mealer_project.data.handlers;\n\nimport android.util.Log;\n\nimport com.example.mealer_project.app.App;\nimport com.example.mealer_project.data.entity_models.CreditCardEntityModel;\nimport com.example.mealer_project.data.entity_models.UserEntityModel;\nimport com.example.mealer_project.data.models.Address;\nimport com.example.mealer_project.data.models.Chef;\nimport com.example.mealer_project.data.models.Client;\nimport com.example.mealer_project.data.models.CreditCard;\nimport com.example.mealer_project.data.models.UserRoles;\nimport com.example.mealer_project.ui.screens.LoginScreen;\nimport com.example.mealer_project.ui.screens.SignupScreen;\nimport com.example.mealer_project.utils.Response;\n\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\n\npublic class UserHandler {\n\n    /**\n     * Register a new Client account\n     * @param signupScreen instance of login screen (required in asynchronous callback function to indicate success or failure)\n     * @param userData user entity model containing all unvalidated user data\n     * @param creditCardData credit card entity model containing all unvalidated credit card data\n     * @return a Response object containing error or success message\n     */\n    public Response registerClient(SignupScreen signupScreen, UserEntityModel userData, CreditCardEntityModel creditCardData) {\n        // guard clause\n        if (userData == null) {\n            return new Response(false, \"Please complete all fields.\");\n        }\n        else if (creditCardData == null) { //no description\n            return new Response(false, \"Please complete all credit card fields.\");\n        }\n\n        // set the appropriate role for the user\n        userData.setRole(UserRoles.CLIENT);\n\n        try {\n            // Try to instantiate three objects: Address object, CreditCard object, and finally, Client object\n            // if any of these throw exception (i.e., if unable to create instance) we handle and return response\n            Client newClient = new Client(userData, new Address(userData.getAddress()), new CreditCard(creditCardData));\n\n            // if code execution reaches this points, it means all user data was valid\n            // therefore, add the user to database\n            // in returned Result, on success: user id is returned (from firebase) or error message\n            App.getPrimaryDatabase().AUTH\n                    .registerClient(userData.getEmail(), userData.getPassword(), signupScreen, newClient);\n\n            return new Response(true, \"User signup submitted!\");\n        } catch (Exception e) {\n            // if at any point, code throws exception (ex: unable to create instance)\n            return new Response(false, e.getMessage());\n        }\n\n    }\n\n    /**\n     * Register a new Chef account\n     * @param signupScreen instance of login screen (required in asynchronous callback function to indicate success or failure)\n     * @param userData user entity model containing all unvalidated user data\n     * @param chefShortDescription a short description provided by chef\n     * @param voidCheque void cheque image provided by chef\n     * @return a Response object containing error or success message\n     */\n    public Response registerChef(SignupScreen signupScreen, UserEntityModel userData, String chefShortDescription, String voidCheque) {\n        // guard clause\n        if (userData == null) {\n            return new Response(false, \"Please complete all fields.\");\n        }\n        else if (chefShortDescription != null && chefShortDescription.equals(\"\")) { //no description\n            return new Response(false, \"Please provide a short description of yourself.\");\n        }\n\n        // set the appropriate role for the user\n        userData.setRole(UserRoles.CHEF);\n\n        try {\n\n            // Try to instantiate two objects: Address object & the Chef object itself\n            // if any of these throw exception (i.e., if unable to create instance) we handle and return response\n            Chef newChef = new Chef(userData, new Address(userData.getAddress()), chefShortDescription, voidCheque);\n\n            // if code execution reaches this points, it means all user data was valid\n            // therefore, add the user to database\n            // in returned Result, on success: user id is returned (from firebase) or error message\n            App.getPrimaryDatabase().AUTH\n                    .registerChef(userData.getEmail(), userData.getPassword(), signupScreen, newChef);\n\n            return new Response(true, \"User signup submitted\");\n\n        } catch (Exception e) {\n            // if at any point, code throws exception (ex: unable to create instance)\n            return new Response(false, e.getMessage());\n        }\n    }\n\n    /**\n     * Method to login user\n     * @param loginScreen instance of login screen (required in asynchronous callback function to indicate success or failure)\n     * @param email email address of the user\n     * @param password password provided by the user\n     */\n    public void logInUser(LoginScreen loginScreen, String email, String password) {\n        App.getPrimaryDatabase().AUTH.logInUser(email, password, loginScreen);\n    }\n\n    /**\n     * Method to suspend chef\n     * @param chef Chef involved with complaint\n     * @param suspensionDate end date of suspension\n     */\n    public void suspendChef(Chef chef, Date suspensionDate){\n        App.getPrimaryDatabase().USER.updateChefSuspension(chef.getUserId(), true, suspensionDate);\n    }\n\n    /**\n     * Method to update chef (check if date has passed)\n     * @param chef Chef involved with complaint\n     */\n    public void updateChef(Chef chef){\n\n        if (chef.getSuspensionDate() != null) { //not suspended\n            if (new Date().after(chef.getSuspensionDate())) { // if the date has passed, we change info in firebase\n                chef.setIsSuspended(false);\n                chef.setSuspensionDate(null);\n                App.getPrimaryDatabase().USER.updateChefSuspension(chef.getUserId(), false, null);\n            }\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mealer_project/data/handlers/UserHandler.java b/app/src/main/java/com/example/mealer_project/data/handlers/UserHandler.java
--- a/app/src/main/java/com/example/mealer_project/data/handlers/UserHandler.java	(revision 23936427a8e7a03ce5900ba95a057441297c0021)
+++ b/app/src/main/java/com/example/mealer_project/data/handlers/UserHandler.java	(date 1667769798864)
@@ -1,15 +1,19 @@
 package com.example.mealer_project.data.handlers;
 
+import android.app.Activity;
 import android.util.Log;
 
 import com.example.mealer_project.app.App;
 import com.example.mealer_project.data.entity_models.CreditCardEntityModel;
 import com.example.mealer_project.data.entity_models.UserEntityModel;
 import com.example.mealer_project.data.models.Address;
+import com.example.mealer_project.data.models.Admin;
 import com.example.mealer_project.data.models.Chef;
 import com.example.mealer_project.data.models.Client;
 import com.example.mealer_project.data.models.CreditCard;
 import com.example.mealer_project.data.models.UserRoles;
+import com.example.mealer_project.ui.screens.AdminScreen;
+import com.example.mealer_project.ui.screens.ComplaintScreen;
 import com.example.mealer_project.ui.screens.LoginScreen;
 import com.example.mealer_project.ui.screens.SignupScreen;
 import com.example.mealer_project.utils.Response;
@@ -130,4 +134,9 @@
             }
         }
     }
+
+    public void getClientAndChefNamesByIds(String clientId, String chefId, ComplaintScreen complaintScreen) {
+        App.getPrimaryDatabase().USER.getClientAndChefNamesByIds(clientId, chefId, complaintScreen);
+    }
+
 }
Index: app/src/main/java/com/example/mealer_project/data/models/inbox/SampleComplaintsData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mealer_project/data/models/inbox/SampleComplaintsData.java b/app/src/main/java/com/example/mealer_project/data/models/inbox/SampleComplaintsData.java
new file mode 100644
--- /dev/null	(date 1667772986494)
+++ b/app/src/main/java/com/example/mealer_project/data/models/inbox/SampleComplaintsData.java	(date 1667772986494)
@@ -0,0 +1,5 @@
+package com.example.mealer_project.data.models.inbox;
+
+public class SampleComplaintsData {
+
+}
